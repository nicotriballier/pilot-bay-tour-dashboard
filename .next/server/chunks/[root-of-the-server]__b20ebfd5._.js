module.exports=[32319,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/work-unit-async-storage.external.js",()=>require("next/dist/server/app-render/work-unit-async-storage.external.js"))},24725,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/after-task-async-storage.external.js",()=>require("next/dist/server/app-render/after-task-async-storage.external.js"))},20635,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/action-async-storage.external.js",()=>require("next/dist/server/app-render/action-async-storage.external.js"))},18622,(e,t,r)=>{t.exports=e.x("next/dist/compiled/next-server/app-page-turbo.runtime.prod.js",()=>require("next/dist/compiled/next-server/app-page-turbo.runtime.prod.js"))},56704,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/work-async-storage.external.js",()=>require("next/dist/server/app-render/work-async-storage.external.js"))},70406,(e,t,r)=>{t.exports=e.x("next/dist/compiled/@opentelemetry/api",()=>require("next/dist/compiled/@opentelemetry/api"))},93695,(e,t,r)=>{t.exports=e.x("next/dist/shared/lib/no-fallback-error.external.js",()=>require("next/dist/shared/lib/no-fallback-error.external.js"))},38600,(e,t,r)=>{},78099,e=>{"use strict";e.s(["handler",()=>b,"patchFetch",()=>C,"routeModule",()=>w,"serverHooks",()=>A,"workAsyncStorage",()=>E,"workUnitAsyncStorage",()=>y],78099);var t=e.i(47909),r=e.i(74017),a=e.i(96250),n=e.i(59756),o=e.i(61916),s=e.i(69741),i=e.i(16795),l=e.i(87718),d=e.i(95169),u=e.i(47587),p=e.i(66012),c=e.i(70101),h=e.i(26937),x=e.i(10372),v=e.i(93695);e.i(52474);var g=e.i(220);e.s(["GET",()=>m],47714);var R=e.i(89171);async function m(e){let{searchParams:t}=new URL(e.url),r=t.get("ids");if(!r)return R.NextResponse.json({error:"Missing airport IDs"},{status:400});let a=r.split(",");try{let e=new AbortController,t=setTimeout(()=>e.abort(),15e3);console.log(`🌤️  Fetching weather data for ${a.length} airports: ${r}`);let n=await fetch(`https://aviationweather.gov/api/data/metar?ids=${r}&format=json&taf=false`,{headers:{"User-Agent":"Mozilla/5.0 (compatible; Bay Area Aviation Weather)",Accept:"application/json"},signal:e.signal});if(clearTimeout(t),!n.ok)throw Error(`Aviation Weather API returned ${n.status}: ${n.statusText}`);let o=await n.json();return console.log(`✅ Weather data fetched for ${a.length} airports`),R.NextResponse.json(o)}catch(r){console.error("❌ Error fetching METAR data from aviationweather.gov:",r);let e="Weather service temporarily unavailable",t=503;return r instanceof Error&&("AbortError"===r.name?(e="Weather service timeout - please try again",t=504):(r.message.includes("ConnectTimeoutError")||r.message.includes("fetch failed"))&&(e="Aviation weather service (aviationweather.gov) is currently unreachable.",t=503)),console.error(`🚫 Returning error to user: ${e}`),R.NextResponse.json({error:e,details:"Real-time weather data is not available. Do not use for flight planning.",timestamp:new Date().toISOString()},{status:t})}}var f=e.i(47714);let w=new t.AppRouteRouteModule({definition:{kind:r.RouteKind.APP_ROUTE,page:"/api/weather/route",pathname:"/api/weather",filename:"route",bundlePath:""},distDir:".next",relativeProjectDir:"",resolvedPagePath:"[project]/app/api/weather/route.ts",nextConfigOutput:"",userland:f}),{workAsyncStorage:E,workUnitAsyncStorage:y,serverHooks:A}=w;function C(){return(0,a.patchFetch)({workAsyncStorage:E,workUnitAsyncStorage:y})}async function b(e,t,a){var R;let m="/api/weather/route";m=m.replace(/\/index$/,"")||"/";let f=await w.prepare(e,t,{srcPage:m,multiZoneDraftMode:!1});if(!f)return t.statusCode=400,t.end("Bad Request"),null==a.waitUntil||a.waitUntil.call(a,Promise.resolve()),null;let{buildId:E,params:y,nextConfig:A,isDraftMode:C,prerenderManifest:b,routerServerContext:T,isOnDemandRevalidate:N,revalidateOnlyGenerated:j,resolvedPathname:P}=f,k=(0,s.normalizeAppPath)(m),O=!!(b.dynamicRoutes[k]||b.routes[P]);if(O&&!C){let e=!!b.routes[P],t=b.dynamicRoutes[k];if(t&&!1===t.fallback&&!e)throw new v.NoFallbackError}let q=null;!O||w.isDev||C||(q="/index"===(q=P)?"/":q);let S=!0===w.isDev||!O,_=O&&!S,U=e.method||"GET",H=(0,o.getTracer)(),I=H.getActiveScopeSpan(),M={params:y,prerenderManifest:b,renderOpts:{experimental:{cacheComponents:!!A.experimental.cacheComponents,authInterrupts:!!A.experimental.authInterrupts},supportsDynamicResponse:S,incrementalCache:(0,n.getRequestMeta)(e,"incrementalCache"),cacheLifeProfiles:null==(R=A.experimental)?void 0:R.cacheLife,isRevalidate:_,waitUntil:a.waitUntil,onClose:e=>{t.on("close",e)},onAfterTaskError:void 0,onInstrumentationRequestError:(t,r,a)=>w.onRequestError(e,t,a,T)},sharedContext:{buildId:E}},$=new i.NodeNextRequest(e),D=new i.NodeNextResponse(t),F=l.NextRequestAdapter.fromNodeNextRequest($,(0,l.signalFromNodeResponse)(t));try{let s=async r=>w.handle(F,M).finally(()=>{if(!r)return;r.setAttributes({"http.status_code":t.statusCode,"next.rsc":!1});let a=H.getRootSpanAttributes();if(!a)return;if(a.get("next.span_type")!==d.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${a.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let n=a.get("next.route");if(n){let e=`${U} ${n}`;r.setAttributes({"next.route":n,"http.route":n,"next.span_name":e}),r.updateName(e)}else r.updateName(`${U} ${e.url}`)}),i=async o=>{var i,l;let d=async({previousCacheEntry:r})=>{try{if(!(0,n.getRequestMeta)(e,"minimalMode")&&N&&j&&!r)return t.statusCode=404,t.setHeader("x-nextjs-cache","REVALIDATED"),t.end("This page could not be found"),null;let i=await s(o);e.fetchMetrics=M.renderOpts.fetchMetrics;let l=M.renderOpts.pendingWaitUntil;l&&a.waitUntil&&(a.waitUntil(l),l=void 0);let d=M.renderOpts.collectedTags;if(!O)return await (0,p.sendResponse)($,D,i,M.renderOpts.pendingWaitUntil),null;{let e=await i.blob(),t=(0,c.toNodeOutgoingHttpHeaders)(i.headers);d&&(t[x.NEXT_CACHE_TAGS_HEADER]=d),!t["content-type"]&&e.type&&(t["content-type"]=e.type);let r=void 0!==M.renderOpts.collectedRevalidate&&!(M.renderOpts.collectedRevalidate>=x.INFINITE_CACHE)&&M.renderOpts.collectedRevalidate,a=void 0===M.renderOpts.collectedExpire||M.renderOpts.collectedExpire>=x.INFINITE_CACHE?void 0:M.renderOpts.collectedExpire;return{value:{kind:g.CachedRouteKind.APP_ROUTE,status:i.status,body:Buffer.from(await e.arrayBuffer()),headers:t},cacheControl:{revalidate:r,expire:a}}}}catch(t){throw(null==r?void 0:r.isStale)&&await w.onRequestError(e,t,{routerKind:"App Router",routePath:m,routeType:"route",revalidateReason:(0,u.getRevalidateReason)({isRevalidate:_,isOnDemandRevalidate:N})},T),t}},v=await w.handleResponse({req:e,nextConfig:A,cacheKey:q,routeKind:r.RouteKind.APP_ROUTE,isFallback:!1,prerenderManifest:b,isRoutePPREnabled:!1,isOnDemandRevalidate:N,revalidateOnlyGenerated:j,responseGenerator:d,waitUntil:a.waitUntil});if(!O)return null;if((null==v||null==(i=v.value)?void 0:i.kind)!==g.CachedRouteKind.APP_ROUTE)throw Object.defineProperty(Error(`Invariant: app-route received invalid cache entry ${null==v||null==(l=v.value)?void 0:l.kind}`),"__NEXT_ERROR_CODE",{value:"E701",enumerable:!1,configurable:!0});(0,n.getRequestMeta)(e,"minimalMode")||t.setHeader("x-nextjs-cache",N?"REVALIDATED":v.isMiss?"MISS":v.isStale?"STALE":"HIT"),C&&t.setHeader("Cache-Control","private, no-cache, no-store, max-age=0, must-revalidate");let R=(0,c.fromNodeOutgoingHttpHeaders)(v.value.headers);return(0,n.getRequestMeta)(e,"minimalMode")&&O||R.delete(x.NEXT_CACHE_TAGS_HEADER),!v.cacheControl||t.getHeader("Cache-Control")||R.get("Cache-Control")||R.set("Cache-Control",(0,h.getCacheControlHeader)(v.cacheControl)),await (0,p.sendResponse)($,D,new Response(v.value.body,{headers:R,status:v.value.status||200})),null};I?await i(I):await H.withPropagatedContext(e.headers,()=>H.trace(d.BaseServerSpan.handleRequest,{spanName:`${U} ${e.url}`,kind:o.SpanKind.SERVER,attributes:{"http.method":U,"http.target":e.url}},i))}catch(t){if(t instanceof v.NoFallbackError||await w.onRequestError(e,t,{routerKind:"App Router",routePath:k,routeType:"route",revalidateReason:(0,u.getRevalidateReason)({isRevalidate:_,isOnDemandRevalidate:N})}),O)throw t;return await (0,p.sendResponse)($,D,new Response(null,{status:500})),null}}}];

//# sourceMappingURL=%5Broot-of-the-server%5D__b20ebfd5._.js.map